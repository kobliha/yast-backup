/**
 *  File:
 *    backup.ycp
 *
 *  Module:
 *    Backup module
 *
 *  Authors:
 *    Ladislav Slezak <lslezak@suse.cz>
 *
 *  $Id$
 *
 *  Main file for backup module - definition of workflow
 *
 */


{

/* TODO: check for configuration changes, avoid unnecessary searches */

y2milestone(" *** Backup module started *** ");

import "Wizard";
import "Mode";
import "Backup";

include "wizard/sequencer.ycp";
include "ui/common_popups.ycp";
include "ui/common_functions.ycp";

include "backup/functions.ycp";
include "backup/ui.ycp";

textdomain "backup";


integer wait_time = 300;    // loop delay (in miliseconds)

boolean root_warning_displayed = false;

integer modified_num = 0;		// number of modified files
integer modified_size = 0;		// size
integer nopkg_num = 0;			// number of found files which do not belong to any package
integer nopkg_size = 0;			// size

//list list_of_installed_packages = [];	// names of all installed packages
boolean packages_list_stored = false;

integer selected_files_num = 0;		// number of selected files to backup
integer selected_pkg_num = 0;		// number of packages which files are selected

string checkmark = UI::Glyph(`CheckMark);
string nocheckmark = (checkmark == "[x]") ? "[ ]" : " ";

boolean hostname_stored = false;
boolean date_stored = false;
boolean file_list_stored = false;
boolean comment_stored = false;
list e2image_results = [];		// results of storing ext2 images
integer archived_num = 0;
list not_readable_files = [];
list created_archive_files = [];
list failed_ptables = [];
list stored_ptables = [];
boolean read_ptables_info = false;
boolean stored_list = false;

integer tar_result = 1;		// exit status of tar
integer total_files = 0;	// total number of files in archive
integer added_files = 0;

boolean confirm_abort = false;	// confirm abort
map profilewritten = $[];	// result of writing profile

if (Mode::test == true)
{
    // set test data
    root_warning_displayed = true;	// do not display 'non-root' warning
    modified_num = 2;		// number of modified files
    modified_size = 14627;	// size
    nopkg_num = 1;		// number of found files which do not belong to any package
    nopkg_size = 14956;		// size

    hostname_stored = true;
    date_stored = true;
    file_list_stored = true;
    comment_stored = true;
    read_ptables_info = true;
    stored_list = true;

    tar_result = 0;		// exit status of tar
    total_files = modified_num + nopkg_num;		// total number of files in archive
    archived_num = total_files + added_files;
    selected_files_num = total_files;
    packages_list_stored = true;

    Backup::archive_name = "/tmp/backup/archive.tar";
    Backup::description = "Backup before partition resize";
    Backup::fs_exclude = [ "devpts", "iso9660", "proc", "shm"];
    Backup::detected_fs = [ "devpts", "ext2", "iso9660", "proc", "shm", "reiserfs"];
    Backup::detected_ext2 = [ $[ "partition": "/dev/hda1", "mountpoint" : "/boot" ], $[ "partition": "/dev/hda2", "mountpoint" : "/home" ] ];
    Backup::ext2_backup = AddIdExt2(Backup::detected_ext2);

    Backup::backup_files = $[ "aaa_base-2001.10.8-1" : $[ "changed_files" : ["/etc/inittab", "/etc/modules.conf"], "install_prefixes" : "none" ],
	"" : $[ "changed_files" : ["/etc/X11/XF86Config"], "install_prefixes" : "none" ]
    ];
    Backup::selected_files = Backup::backup_files;
}

// sequence of dialogs
map sequence = $[
    "ws_start"	: "archive",

    "archive" : $[
        `next	: "backup",
	`tar_opt: "tar_opt",
	`abort	: `abort
    ],
    "tar_opt" : $[
	`ok : "archive",
	`abort	: `abort
    ],
    "backup" : $[
        `next	: "exclude",
	`next2	: "searching",
	`next3	: "system",
	`abort	: `abort
    ],
    "exclude" : $[
        `next	: "system",
	`next2	: "searching",
	`expert : "excludefs",
	`abort	: `abort
    ],
    "excludefs" : $[
	`ok : "exclude",
	`abort	: `abort
    ],
    "system" : $[
	`next : "searching",
	`abort	: `abort
    ],
    "searching"	: $[
	`next	: "files",
	`next2	: "archiving",
	`abort	: `abort
    ],
    "files" : $[
        `next	: "archiving",
	`abort	: `abort
    ],
    "archiving" : $[
	`next	: "summary",
	`abort	: `abort
    ],
    "summary" : $[
	`abort	: `abort,
	`finish	: `ws_finish
    ]
];

// aliases for dialogs
map aliases = $[
    "files"	: ``(FilesDialog()),
    "tar_opt"	: ``(TarOptionsDialog()),
    "archive"	: ``(ArchDialog()),
    "backup"	: ``(BackupDialog()),
    "exclude"	: ``(ExcludeDialog()),
    "excludefs" : ``(ExcludeFilesystemDialog()),
    "system"	: ``(SystemBackupDialog()),
    "searching"	: [ ``(SearchingModifiedDialog()), true ],
    "archiving"	: [ ``(ArchivingDialog()), true ],
    "summary"	: ``(SummaryDialog())
];

// create wizard dialog
Wizard::CreateDialog();

if (Mode::test == true)
{
    // display all dialogs
    ArchDialog();
    TarOptionsDialog();
    BackupDialog();
    ExcludeDialog();
    ExcludeFilesystemDialog();
    SystemBackupDialog();
    FilesDialog();
    SummaryDialog();
}
else
{
    // start wizard sequencer
    WizardSequencer(aliases, sequence);
}

// close dialog
Wizard::CloseDialog();

y2milestone(" *** Backup module finished *** ");

}





